Function is simple like a package , and when ever you want you can use it for a particular work. 
Whenever you want to call the function , only call it using it's name. 
function addTwoNumbers(number1,number2) , here  number1,number2 are called as parameters 
addTwoNumbers(3,4) , here 3,4 are called as arguments - arguments pass during function call. 
parameters pass during function declaration 



// function sayMyName(){
// console.log("H");
// console.log("I");
// console.log("T");
// console.log("E");
// console.log("S");
// console.log("H");
// }

// sayMyName();

// function addTwoNumbers(number1,number2){
//      console.log(number1 + number2); 
// }
// addTwoNumbers(); //NAN - 
// addTwoNumbers(3,4);//7
// addTwoNumbers(3, "4")//34
// addTwoNumbers(3, "a")//3a
// addTwoNumbers(3, null)//3
// const result = addTwoNumbers(3,5)// 8
// console.log(result)//undefinded (because you written console , 
//console print karna matlab ye nhi that function is returning, return is another concept and console means print in console. 
//Let's see , how we can write it same   )
function addTwoNumbers(number1, number2){
    let result = number1 + number2 ;
    console.log("Jyoti") //Jyoti ( this will print because this is above return statement )
    return result

    //console.log("Jyoti")- (This line will never print because in function  there is a rule 
    //that if you have returned after that no line will execute in that function )
    //You can also write it as directly (return number1 + number2)
}
const result = addTwoNumbers(3,5)
console.log("Result: " , result);// Result : 8 



function loginUserMessage(username){
    return `${username} just logged in `
}
loginUserMessage("hitesh")// nothing returns 
console.log(loginUserMessage("hitesh"))//hitesh just logged in 
console.log(loginUserMessage())//undefined just logged in 

When you use the return statement in a function, it's like putting something in a box and giving it back to someone. 
But just putting it in the box isn't enough to show it to everyone. You have to do something with the box to make what's inside visible.
 So, if you want to see what's in the box (the message you created with return), you need to use console.log() to show it on the screen.


 undefinded is a false value in Java script 
 also empty string ("") is a false value 
  falsy values include undefined, null, false, 0, NaN, and an empty string ("")
/*
  function calculateCartPrice(num1){
    return num1
  }
  console.log(calculateCartPrice(2));
  */ This will return 2 but 
  /*function calculateCartPrice(num1){
    return num1
  }
  console.log(calculateCartPrice(200, 300, 400));
  */this will return 200 , because if there are parameter is one ,
   and you have passed more than one arguements than it will take the 1st argument only 


So how can you take all the arguements ? 
the way is you have to use res operator (...) tere is also a spread operator (...) both are symbolically same 
but work wise differently use. 


 function calculateCartPrice(...num1){
    return num1
 }
 console.log(calculateCartPrice(200,400,500))//[ 200, 400, 500 ]
it will return value as an array . This is mostly use in shopping cart 

so now using this res operator you can pass any no of arguments in a single parameter. 


 function calculateCartPrice(...num1){
    return num1
 }
 console.log(calculateCartPrice(200,400,500, 600, 700, 8000))
 // It will return //[ 200, 400, 500, 600, 700, 8000 ] 

 let's see another example 
  function calculateCartPrice(val1, val2 ...num1){
    return num1
 }
 console.log(calculateCartPrice(200,400,500, 600))//[ 500, 600 ]
 because val1 will take 200, val2 will take 400 so ...num1 will take [500, 600]

 How to pass object in a function ? 


 